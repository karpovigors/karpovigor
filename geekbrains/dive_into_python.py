def dive_into_python(lesson):
    


    match lesson:
        case 1:
            #Урок 1

            # Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей. 
            # Дано a, b, c - стороны предполагаемого треугольника. 
            # Требуется сравнить длину каждого отрезка-стороны с суммой двух других. 
            # Если хотя бы в одном случае отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует. 
            # Отдельно сообщить является ли треугольник разносторонним, равнобедренным или равносторонним.

            def check_triangle(a, b, c):
                if a + b > c and a + c > b and b + c > a:
                    if a == b == c:
                        return "Равносторонный треугольник"
                    elif a == b or b == c or c == a:
                        return "Равнобедренный треугольник"
                    else:
                        return "Разносторонный треугольник"
                else:
                    return "Треугольник не существует"

            a=float(input("Введите длину сторона треугольника a:"))
            b=float(input("Введите длину сторона треугольника b:"))
            c=float(input("Введите длину сторона треугольника c:"))

            result = check_triangle(a, b, c)
            print(result)

            # Напишите код, который запрашивает число и сообщает является ли оно простым или составным. 
            # Используйте правило для проверки: “Число является простым, если делится нацело только на единицу и на себя”. 
            # Сделайте ограничение на ввод отрицательных чисел и чисел больше 100 тысяч.

        
        #case 2:
            #Урок 2

            # Напишите программу, которая получает целое число и возвращает его шестнадцатеричное строковое представление. 
            # Функцию hex используйте для проверки своего результата.

            # Напишите программу, которая принимает две строки вида “a/b” - дробь с числителем и знаменателем. 
            # Программа должна возвращать сумму и произведение* дробей. Для проверки своего кода используйте модуль fractions.

        #case 3:

            # Дан список повторяющихся элементов. 
            # Вернуть список с дублирующимися элементами. 
            # В результирующем списке не должно быть дубликатов.


            #В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых. 
            # Не учитывать знаки препинания и регистр символов. За основу возьмите любую статью из википедии или из документации к языку.


            #Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения. 
            # Определите какие вещи влезут в рюкзак передав его максимальную грузоподъёмность. 
            # Достаточно вернуть один допустимый вариант. *Верните все возможные варианты комплектации рюкзака.

        #case 4:

        #case 5:
        
        #case 6:

        #case 7:

        #case 8:

        #case 9:

        #case 10:



def main():
    number_lesson=int(input("Введите номер урока:"))
    dive_into_python(number_lesson)


main()

